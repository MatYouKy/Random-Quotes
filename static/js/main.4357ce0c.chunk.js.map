{"version":3,"sources":["App.js","index.js"],"names":["App","useState","quotes","setQuotes","quote","author","setQuote","prevQuoteRef","useRef","prevQuote","current","useEffect","random","Math","floor","length","fetch","then","res","json","data","catch","err","console","log","className","onClick","citat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAqDeA,MAjDf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACNC,EADM,KACEC,EADF,OAEaF,mBAAS,CACjCG,MAAM,GACNC,OAAQ,KAJG,mBAEND,EAFM,KAECE,EAFD,KAaPC,EAAeC,mBACfC,EAAYF,EAAaG,QAsB/B,OAlBAC,qBAAU,WACRJ,EAAaG,QAAUN,KAGzBO,qBAAU,WACR,GAAGT,EAAQ,CACT,IAAMU,EAAUC,KAAKC,MAAOD,KAAKD,SAAWV,EAAOa,QACnDT,EAASJ,EAAOU,OAElB,CAACV,IAEHS,qBAAU,WACNK,MAAM,yIACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIjB,EAAUiB,MACvBC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAI,QAASF,QACrC,IAGA,uBAAMG,UAAU,MAAhB,UACE,4CACA,oCACE,qBAAIA,UAAU,QAAd,qBAA+BrB,EAAMA,MAArC,OACA,qBAAIqB,UAAU,SAAd,qBAAgCrB,EAAMC,UACrCI,GAAkC,KAArBA,EAAUJ,QAAiB,wBAAQoB,UAAU,SAASC,QA1B9C,kBAAMpB,EAASG,IA0BI,sBACzC,wBAAQgB,UAAU,SAASC,QApCT,WACtB,IAAMd,EAAUC,KAAKC,MAAOD,KAAKD,SAAWV,EAAOa,QAC7CY,EAAQzB,EAAOU,GACrBN,EAASqB,IAiCL,yBC1CRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4357ce0c.chunk.js","sourcesContent":["import { useEffect, useState } from 'react/cjs/react.development';\nimport { useRef } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [quotes, setQuotes] = useState([]);\n  const [quote, setQuote] = useState({\n    quote:'',\n    author: ''\n  })\n  \n  const handleNextQuote = () => {\n    const random =  Math.floor((Math.random() * quotes.length));\n    const citat = quotes[random]\n    setQuote(citat);\n  }\n  \n  const prevQuoteRef = useRef();\n  const prevQuote = prevQuoteRef.current\n\n  const handlePreviousQuote = () => setQuote(prevQuote);\n  \n  useEffect(() => {\n    prevQuoteRef.current = quote;\n  })\n  \n  useEffect(() => {\n    if(quotes) {\n      const random =  Math.floor((Math.random() * quotes.length));\n      setQuote(quotes[random])\n    }\n  },[quotes])\n\n  useEffect(() => {\n      fetch('https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json')\n      .then(res => res.json())\n      .then(data => setQuotes(data))\n      .catch(err => console.log('Error', err))\n  },[])\n  \n  return (\n    <main className=\"App\">\n      <h1>quotations</h1>\n      <section>\n        <h2 className=\"quote\">Quote: \"{quote.quote}\"</h2>\n        <h3 className=\"author\">Author: {quote.author}</h3>\n        {prevQuote && prevQuote.author !== '' && <button className=\"button\" onClick={handlePreviousQuote}>Previous</button>}\n        <button className=\"button\" onClick={handleNextQuote}>Next</button>\n      </section>\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}